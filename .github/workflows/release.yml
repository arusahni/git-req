name: Create release
on:
  push:
    tags:
      - "v*"

env:
  RUST_BACKTRACE: full

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Get latest release version number
        id: get_version
        uses: battila7/get-version-action@v2
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: "Release ${{ steps.get_version.outputs.version }}"
          body: "<INSERT RELEASE DETAILS HERE>"
          draft: true
          prerelease: false

  build:
    name: Build and upload the binary
    runs-on: ${{ matrix.os }}
    needs: release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_suffix: linux-amd64
          - os: macos-latest
            asset_suffix: macos-amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: cargo build --release --locked
      - name: Create archive
        run: tar czf git-req-${{ needs.release.outputs.release_version }}-${{ matrix.asset_suffix }}.tar.gz -C target/release/ git-req
      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: git-req-${{ needs.release.outputs.release_version }}-${{ matrix.asset_suffix }}.tar.gz
          asset_name: git-req-${{ needs.release.outputs.release_version }}-${{ matrix.asset_suffix }}.tar.gz
          asset_content_type: application/octet-stream

  build-win:
    name: Build and upload the Windows binary
    runs-on: windows-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: cargo build --release --locked
      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: target/release/git-req.exe
          asset_name: git-req.exe
          asset_content_type: application/vnd.microsoft.portable-executable

  build-debian:
    name: Build and upload the Debian/Ubuntu package
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: deb Build
        uses: ebbflow-io/cargo-deb-amd64-ubuntu@1.0
      - name: Upload package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: target/x86_64-unknown-linux-musl/debian/git-req_${{ needs.release.outputs.release_version }}_amd64.deb
          asset_name: git-req_${{ needs.release.outputs.release_version }}_amd64.deb
          asset_content_type: application/octet-stream
